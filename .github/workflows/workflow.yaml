name: Docker Build Deploy
on:
  push:
    branches: [main]
  workflow_dispatch:
env:
  DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
  DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  PRODUCT_REPO_ALERTS: ${{secrets.PRODUCT_REPO_ALERTS}}
  PRODUCT_REPO_GATEWAY: ${{secrets.PRODUCT_REPO_GATEWAY}}
  PRODUCT_REPO_USERS: ${{secrets.PRODUCT_REPO_USERS}}
  PRODUCT_REPO_CATEGORIES: ${{secrets.PRODUCT_REPO_CATEGORIES}}
  PRODUCT_REPO_BUDGETS: ${{secrets.PRODUCT_REPO_BUDGETS}}
  PRODUCT_REPO_DEBTS: ${{secrets.PRODUCT_REPO_DEBTS}}
  PRODUCT_REPO_EVENTS: ${{secrets.PRODUCT_REPO_EVENTS}}
  PRODUCT_REPO_EXPENSES: ${{secrets.PRODUCT_REPO_EXPENSES}}
  PRODUCT_REPO_INCOMES: ${{secrets.PRODUCT_REPO_INCOMES}}
  PRODUCT_REPO_MEETINGS: ${{secrets.PRODUCT_REPO_MEETINGS}}
jobs:
  create-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Docker login
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
      - name: install crt
        run: |
          touche backend/services/gateway/src/PRIVATE_KEY.pem
          echo"${{secrets.PRIVATE_KEY}}" >> backend/services/gateway/src/PRIVATE_KEY.pem
          touche backend/services/gateway/src/PUBLIC_CERTIFICATE.pem
          echo"${{secrets.PUBLIC_CERTIFICATE}}" >> backend/services/gateway/src/PUBLIC_CERTIFICATE.pem

      - name: rm and touch prod env
        run: |          
          rm -rf backend/services/users/src/env.ts
          touch backend/services/users/src/env.ts
          echo "${{secrets.ENV}}" >> backend/services/users/src/env.ts
          rm -rf backend/services/alerts/src/env.ts
          touch backend/services/alerts/src/env.ts
          echo "${{secrets.ENV}}" >> backend/services/alerts/src/env.ts
          rm -rf backend/services/categories/src/env.ts
          touch backend/services/categories/src/env.ts
          echo "${{secrets.ENV}}" >> backend/services/categories/src/env.ts
          rm -rf backend/services/budgets/src/env.ts
          touch backend/services/budgets/src/env.ts
          echo "${{secrets.ENV}}" >> backend/services/budgets/src/env.ts
          rm -rf backend/services/debts/src/env.ts
          touch backend/services/debts/src/env.ts
          echo "${{secrets.ENV}}" >> backend/services/debts/src/env.ts
          rm -rf backend/services/events/src/env.ts
          touch backend/services/events/src/env.ts
          echo "${{secrets.ENV}}" >> backend/services/events/src/env.ts
          rm -rf backend/services/expenses/src/env.ts
          touch backend/services/expenses/src/env.ts
          echo "${{secrets.ENV}}" >> backend/services/expenses/src/env.ts
          rm -rf backend/services/incomes/src/env.ts
          touch backend/services/incomes/src/env.ts
          echo "${{secrets.ENV}}" >> backend/services/incomes/src/env.ts
          rm -rf backend/services/meetings/src/env.ts
          touch backend/services/meetings/src/env.ts
          echo "${{secrets.ENV}}" >> backend/services/meetings/src/env.ts
      - name: Build services docker image
        run: | 
          docker build backend/services/users/ --file backend/services/users/Dockerfile -t "$DOCKER_USERNAME/$PRODUCT_REPO_USERS:latest"
          docker build backend/services/alerts/ --file backend/services/alerts/Dockerfile -t "$DOCKER_USERNAME/$PRODUCT_REPO_ALERTS:latest"
          docker build backend/services/gateway/ --file backend/services/gateway/Dockerfile -t "$DOCKER_USERNAME/$PRODUCT_REPO_GATEWAY:latest"
          docker build backend/services/categories/ --file backend/services/categories/Dockerfile -t "$DOCKER_USERNAME/$PRODUCT_REPO_CATEGORIES:latest"
          docker build backend/services/budgets/ --file backend/services/budgets/Dockerfile -t "$DOCKER_USERNAME/$PRODUCT_REPO_BUDGETS:latest"
          docker build backend/services/debts/ --file backend/services/debts/Dockerfile -t "$DOCKER_USERNAME/$PRODUCT_REPO_DEBTS:latest"
          docker build backend/services/events/ --file backend/services/events/Dockerfile -t "$DOCKER_USERNAME/$PRODUCT_REPO_EVENTS:latest"
          docker build backend/services/expenses/ --file backend/services/expenses/Dockerfile -t "$DOCKER_USERNAME/$PRODUCT_REPO_EXPENSES:latest"
          docker build backend/services/incomes/ --file backend/services/incomes/Dockerfile -t "$DOCKER_USERNAME/$PRODUCT_REPO_INCOMES:latest"
          docker build backend/services/meetings/ --file backend/services/meetings/Dockerfile -t "$DOCKER_USERNAME/$PRODUCT_REPO_MEETINGS:latest"
      - name: Push services docker image
        run: |
          docker push "$DOCKER_USERNAME/$PRODUCT_REPO_USERS:latest"
          docker push "$DOCKER_USERNAME/$PRODUCT_REPO_ALERTS:latest"
          docker push "$DOCKER_USERNAME/$PRODUCT_REPO_GATEWAY:latest"
          docker push "$DOCKER_USERNAME/$PRODUCT_REPO_CATEGORIES:latest"
          docker push "$DOCKER_USERNAME/$PRODUCT_REPO_BUDGETS:latest"
          docker push "$DOCKER_USERNAME/$PRODUCT_REPO_DEBTS:latest"
          docker push "$DOCKER_USERNAME/$PRODUCT_REPO_EVENTS:latest"
          docker push "$DOCKER_USERNAME/$PRODUCT_REPO_EXPENSES:latest"
          docker push "$DOCKER_USERNAME/$PRODUCT_REPO_INCOMES:latest"
          docker push "$DOCKER_USERNAME/$PRODUCT_REPO_MEETINGS:latest"
  deployment:
    needs: [create-image]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        name: Checkout repository
      - name: Connect to GKE
        uses: Swibi/connect-to-gke@v2.1
        with:
          GCP_SA_KEY: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          GCP_PROJECT_ID: ${{ secrets.PROJECT_ID }}
          GKE_CLUSTER: ${{ secrets.CLUSTER_NAME }}
          GKE_LOCATION: ${{ secrets.ZONE_NAME }}
      - name: Deploy to GKE
        run: |
          kubectl apply -f backend/challenge.yaml

